class Solution {
    public int maxArea(int[] height) {
        //Approach 1 - Brute Force

         int max = 0;

         for(int i = 0; i<height.length; i++) {
             for(int j = i+1; j<height.length; j++) {
                 int currArea = Math.min(height[i], height[j]) * (j-i);
                 max = Math.max(max, currArea);
             }
         }

         return max;

        //Approach 2 - Optimised Soln.

        int max = 0;

        int left = 0, right = height.length - 1;

        while(left < right) {
            int currArea = Math.min(height[left], height[right]) * (right - left);
            max= Math.max(max, currArea);
            if(height[left] < height[right]) {
                left++;
            } else {
                right--;
            }
        }
        return max;
    }
}
