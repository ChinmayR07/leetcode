class Solution {
    // Approach 1
    public int[] countBits(int n) {
        int[] ans = new int[n + 1];
        for (int x = 1; x <= n; ++x) {
            ans[x] = ans[x & (x - 1)] + 1;
        }
        return ans;
    }

    // Approach 2
    private int popCount(int x) {
        int count;
        for (count = 0; x != 0; ++count) {
            x &= x - 1;
        }
        return count;
    }

    public int[] countBits(int n) {
        int[] res = new int[n + 1];
        for (int x = 0; x <= n; ++x) {
            res[x] = popCount(x);
        }
        return res;
    }

    // Approach 3
    public int[] countBits(int n) {
        int[] ans = new int[n + 1];
        int x = 0;
        int b = 1;

        while (b <= n) {
            while (x < b && x + b <= n) {
                ans[x + b] = ans[x] + 1;
                ++x;
            }
            x = 0;
            b <<= 1;
        }
        return ans;
    }
}
