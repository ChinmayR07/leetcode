class Solution {
    public int[] productExceptSelf(int[] nums) {
        //Approach 1
        // int n = nums.length;
        // int[] ans = new int[n];

        // int[] prefix = new int[n];
        // int[] suffix = new int[n];

        // prefix[0] = 1;
        // for(int i = 1; i < n; i++) {
        //     prefix[i] = prefix[i-1] * nums[i-1];
        // }

        // suffix[n-1] = 1;
        // for(int i = n-2; i>=0; i--) {
        //     suffix[i] = suffix[i+1] * nums[i+1];
        // }

        // for(int i = 0; i< n; i++) {
        //     ans[i] = prefix[i] * suffix[i];
        // }

        // return ans;
        //Approach 2
        int n = nums.length;
        int[] ans = new int[n];

        ans[0] = 1;
        for(int i = 1; i < n; i++) {
            ans[i] = ans[i-1] * nums[i-1];
        }

        int right = 1;
        for(int i = n-1; i >= 0; i--) {
            ans[i] = ans[i] * right;
            right *= nums[i];
        }

        return ans;

    }
}
